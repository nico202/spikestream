#!/bin/sh
###########################################################################
#                                                                         #
#  SpikeStream Script                                                     #
#  Copyright (C) 2007 by David Gamez                                      #
#   david@davidgamez.eu                                                   #
#   Version 0.1                                                           #
#                                                                         #
#   This program is free software; you can redistribute it and/or modify  #
#   it under the terms of the GNU General Public License as published by  #
#   the Free Software Foundation; either version 2 of the License, or     #
#   (at your option) any later version.                                   #
#                                                                         #
#   This program is distributed in the hope that it will be useful,       #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#   GNU General Public License for more details.                          #
#                                                                         #
#   You should have received a copy of the GNU General Public License     #
#   along with this program; if not, write to the                         #
#   Free Software Foundation, Inc.,                                       #
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
#                                                                         #
###########################################################################

#------------------------- Clean Spike Stream -----------------------------
#  Cleans up everything that was created by the build script.
#
#  NOTE ANY CHANGES TO THIS FILE MUST BE MIRRORED IN THE BUILD SCRIPT
#--------------------------------------------------------------------------

echo "Cleaning SpikeStream..."


# Check that SPIKESTREAM_ROOT exists
if [ ! $SPIKESTREAM_ROOT ]
then
	echo "  *SPIKESTREAM_ROOT is not defined. Cannot clean up without this."
	exit 1
fi

# Test location of SPIKESTREAM_ROOT
if [ ! -d $SPIKESTREAM_ROOT ]
then
	echo "  *Location for SPIKESTREAM_ROOT \"$SPIKESTREAM_ROOT\" does not exist. Cannot clean up without this."
	exit 1
fi


# Remove spikestream link in bin
cd $SPIKESTREAM_ROOT/bin
rm spikestream

# Remove everything from library
cd $SPIKESTREAM_ROOT/lib
rm libspikestream.a
rm libspikestreamsimulation.a
rm libstdp1neuron.so
rm libstdp1synapse.so

# Clean up spikestream library
cd $SPIKESTREAM_ROOT/spikestreamlibrary
make clean

# Clean up SpikeStream Application
cd $SPIKESTREAM_ROOT/spikestreamapplication/bin
rm spikestreamapplication
cd ..
if [ -f Makefile ]
then
	make clean
	rm Makefile
	cd src
	rm Makefile
fi

# Clean up SpikeStream Simulation
cd $SPIKESTREAM_ROOT/spikestreamsimulation
make clean

# Clean up SpikeStream Archiver
cd $SPIKESTREAM_ROOT/spikestreamarchiver
make clean

# Clean up STDP1 Neuron
cd $SPIKESTREAM_ROOT/stdp1neuron
make clean
cd src
rm libstdp1neuron.so

# Clean up STDP1 Synapse
cd $SPIKESTREAM_ROOT/stdp1synapse
make clean
cd src
rm libstdp1synapse.so


echo ""
echo "---------------------------------------------------------------------"
echo "---------------            Clean Results             ----------------"
echo "---------------------------------------------------------------------"

# ========================  SpikeStream Library ============================
if [ -f ${SPIKESTREAM_ROOT}/lib/libspikestream.a ]
then
	echo "  *SpikeStreamLibrary: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamLibrary: Cleaned up."
fi


# ===================  SpikeStream Application  =======================
if [ -f $SPIKESTREAM_ROOT/bin/spikestream ]
then
	echo "  *SpikeStreamApplication link: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamApplication link: Cleaned up."
fi

if [ -f $SPIKESTREAM_ROOT/spikestreamapplication/bin/spikestreamapplication ]
then
	echo "  *SpikeStreamApplication: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamApplication: Cleaned up."
fi


# ===================  SpikeStream Simulation  ========================
if [ -f $SPIKESTREAM_ROOT/spikestreamsimulation/src/spikestreamsimulation ]  \
		||  [ -f $SPIKESTREAM_ROOT/spikestreamsimulation/src/libspikestreamsimulation.a ] 
then
	echo "  *SpikeStreamSimulation: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamSimulation: Cleaned up"
fi

if [ -f ${SPIKESTREAM_ROOT}/lib/libspikestreamsimulation.a ]
then
	echo "  *SpikeStreamSimulation library: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamSimulation library: Cleaned up."
fi


# ===================  SpikeStream Archiver  ========================
if [ -f $SPIKESTREAM_ROOT/spikestreamarchiver/src/spikestreamarchiver ]
then
	echo "  *SpikeStreamArchiver: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  SpikeStreamArchiver: Cleaned up."
fi


# ========================  STDP1 Neuron  ============================
if [ -f ${SPIKESTREAM_ROOT}/lib/libstdp1neuron.so ]
then
	echo "  *STDP1 Neuron: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  STDP1 Neuron: Cleaned up."
fi


# ========================  STDP1 Synapse  ===========================
if [ -f ${SPIKESTREAM_ROOT}/lib/libstdp1synapse.so ]
then
	echo "  *STDP1 Synapse: Clean failed.*"
	CLEAN_ERROR=true
else
	echo "  STDP1 Synapse: Cleaned up"
fi



# Inform user about results
if [ $CLEAN_ERROR ]
then
	echo "SpikeStream clean script finished with errors Make sure that you are logged in as root when you run this script!"
	echo ""
	exit 1
else
	echo "SpikeStream cleaned up successfully."
	echo ""
fi




